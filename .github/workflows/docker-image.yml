name: Docker Image Builder

on:
  # push:
  #   branches: [ "main" ]
    
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
jobs:
  security-checks:
    permissions:
      contents: read
      security-events: write
      actions: read
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Build the test image
      run: docker build . --file Dockerfile --tag localbuild/testimage:latest
    - name: Grype scan the test image
      uses: anchore/scan-action@v3
      id: scan
      with:
        image: "localbuild/testimage:latest"
        fail-build: false
        severity-cutoff: critical
    - name: Upload vulnerability report
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

  build-deployment:
    needs: security-checks
    runs-on: ubuntu-latest
    steps:
    - name: Get the date
      id: date
      run: echo "::set-output name=date::$(date +'%m%d')"
    - name: Checkout
      uses: actions/checkout@v4
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: |
          ${{ env.REGISTRY }}/ocpdude/plextv:latest
          ${{ env.REGISTRY }}/ocpdude/plextv:${{ steps.date.outputs.date }}
          docker.io/shaker242/plextv:latest
          docker.io/shaker242/plextv:${{ steps.date.outputs.date }}