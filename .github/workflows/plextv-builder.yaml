name: PlexTV Builder  

on:
  push:
    branches:
    - main
    paths:
    - 'Dockerfile'
  workflow_dispatch:
   
env:
  REGISTRY: ghcr.io 
  
jobs:

  docker-linter:
    uses: ocpdude/reusable/.github/workflows/linter.yaml@main
    with:
      language: hadolint

  build_push:
    needs: [ docker-linter ]
    name: Build image
    runs-on: [ ubuntu-latest ] 
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Set up Docker Context
      id: buildx-context
      run: |
        docker context create builders || docker context use builders

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2
      with:
        version: latest
        endpoint: builders
            
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push to Registries
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: |
          ${{env.REGISTRY}}/ocpdude/plextv:1.32.2
          docker.io/shaker242/plextv:1.32.2         
          docker.io/shaker242/plextv:latest
          ${{env.REGISTRY}}/ocpdude/plextv:latest
           
  k8s-linter:
    needs: [ build_push ]
    uses: ocpdude/reusable/.github/workflows/linter.yaml@main
    with:
      language: YamlLint, kubeval
 
 # Insert deployment 
 # needs: k8s-linter
 
  check_quality:
    needs: build_push
    runs-on: [ ubuntu-latest ]
    steps:
    - name: Scanning Image
      continue-on-error: true
      uses: azure/container-scan@v0
      with:
        image-name: ${{env.REGISTRY}}/ocpdude/plextv:latest
        run-quality-checks: true
